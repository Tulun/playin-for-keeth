import Web3 from 'web3';
import address from './address';

const web3 = new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws'));
const abi = [{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"playersAdded","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_a","type":"string"},{"name":"_b","type":"string"}],"name":"compare","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"gameInProgress","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_a","type":"string"},{"name":"_b","type":"string"}],"name":"equal","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"player","outputs":[{"name":"id","type":"uint256"},{"name":"name","type":"string"},{"name":"playerAddress","type":"address"},{"name":"wins","type":"uint256"},{"name":"losses","type":"uint256"},{"name":"ties","type":"uint256"},{"name":"numDisputedGames","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"createGame","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"closeGame","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"playerIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_haystack","type":"string"},{"name":"_needle","type":"string"}],"name":"indexOf","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"gameType","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"game","outputs":[{"name":"id","type":"uint256"},{"name":"firstPlayer","type":"address"},{"name":"secondPlayer","type":"address"},{"name":"bet","type":"uint256"},{"name":"pot","type":"uint256"},{"name":"declaredWinnerFirstPlayer","type":"string"},{"name":"declaredWinnerSecondPlayer","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalNumPlayers","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"gameId","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"addSecondPlayerToGame","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"players","outputs":[{"name":"id","type":"uint256"},{"name":"name","type":"string"},{"name":"playerAddress","type":"address"},{"name":"wins","type":"uint256"},{"name":"losses","type":"uint256"},{"name":"ties","type":"uint256"},{"name":"numDisputedGames","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_declaredWinner","type":"string"}],"name":"chooseWinner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"}],"name":"addPlayerToLeaderboard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_gameType","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_gameInProgress","type":"bool"}],"name":"UpdateGameProgress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_id","type":"uint256"}],"name":"PlayerUpdated","type":"event"}]

// Access to our contract that exists on the blockchain.
export default new web3.eth.Contract(abi, address);
